crds:
  install: true
  keep: true
global:
  logging:
    format: text
    level: info
configs:
  cm:
    create: true
    exec.enabled: true
    timeout.reconciliation: 120s
    controller.sync.timeout.seconds: 300
    server.insecure: true
    admin.enabled: true
    statusbadge.enabled: true
  params:
    server.insecure: true
  cmp:
    create: true
    plugins:
      helmfile:
        init:
          command: [sh]
          args: [-c, 'echo "Initializing..."']
        generate:
          command:
            - bash
            - "-c"
            - |
              if [[ -v ENV_NAME ]]; then
                helmfile -n "$ARGOCD_APP_NAMESPACE" -e $ENV_NAME template --include-crds -q
              elif [[ -v ARGOCD_ENV_ENV_NAME ]]; then
                helmfile -n "$ARGOCD_APP_NAMESPACE" -e "$ARGOCD_ENV_ENV_NAME" template --include-crds -q
              else
                helmfile -n "$ARGOCD_APP_NAMESPACE" template --include-crds -q
              fi
        discover:
          fileName: helmfile.yaml
        lockRepo: false
dex:
  enabled: false
repoServer:
  envFrom:
    - configMapRef:
        name: argocd-env-config
  extraContainers:
    - name: helmfile
      image: ghcr.io/helmfile/helmfile:v0.171.0
      imagePullPolicy: IfNotPresent
      command: [/var/run/argocd/argocd-cmp-server]
      securityContext:
        runAsNonRoot: true
        runAsUser: 999
      volumeMounts:
        - mountPath: /var/run/argocd
          name: var-files
        - mountPath: /home/argocd/cmp-server/plugins
          name: plugins
        - mountPath: /home/argocd/cmp-server/config/plugin.yaml
          subPath: helmfile.yaml
          name: argocd-cmp-cm
        - mountPath: /tmp
          name: cmp-tmp
      env:
        - name: ECR_OCI_PASSWD
          valueFrom:
            secretKeyRef:
              name: testsec
              key: password
        - name: ECR_OCI_USERNAME
          valueFrom:
            secretKeyRef:
              name: testsec
              key: username
  volumes:
    - name: argocd-cmp-cm
      configMap:
        name: argocd-cmp-cm
    - emptyDir: {}
      name: cmp-tmp

