---
apiVersion: argoproj.io/v1alpha1
kind: ApplicationSet
metadata:
  name: k8s-manifest-aoa
  namespace: argocd
spec:
  goTemplate: true
  goTemplateOptions: ["missingkey=error"]
  generators:
    - matrix:
        generators:
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/oisis/ArgoCD-CrossPlane.git
                    revision: main
                    files:
                      - path: argocd/envs/dev/apps-config.yaml
                - list:
                    elementsYaml: "{{ .k8s_manifest_apps | toJson }}"
          - matrix:
              generators:
                - git:
                    repoURL: https://github.com/oisis/ArgoCD-CrossPlane.git
                    revision: main
                    files:
                      - path: argocd/envs/dev/apps-config.yaml
                - list:
                    elementsYaml: "{{ .common_params | toJson }}"
  template:
    metadata:
      name: '{{.name}}'
      labels:
        custom.label/deployed-by: 'k8s-manifests-aoa'
        custom.label/environment: '{{.environment}}'
      finalizers:
        - resources-finalizer.argocd.argoproj.io
    spec:
      project: '{{.project}}'
      sources:
        - repoURL: https://github.com/oisis/ArgoCD-CrossPlane.git
          targetRevision: '{{.git_revision}}'
          path: argocd/apps/{{.config_dir}}
          directory:
            recurse: true
            include: '*.yaml'
            exclude: '{apps-config-example.yaml,.*}'
        - repoURL: https://github.com/oisis/ArgoCD-CrossPlane.git
          targetRevision: '{{.git_revision}}'
          path: argocd/envs/{{.environment}}/{{.config_dir}}
          directory:
            recurse: true
            include: '*.yaml'
            exclude: '{apps-config-example.yaml,.*}'
      destination:
        name: '{{.environment}}'
        namespace: '{{.namespace}}'
      info:
        - name: 'Applicatation url:'
          value: 'http://{{.name}}.{{.domain}}'
      syncPolicy:
        retry:
          limit: 5
          backoff:
            duration: 5s
            factor: 2
            maxDuration: 3m
        managedNamespaceMetadata:
          labels:
            environment: '{{.environment}}'
          annotations:
            app_name: '{{.name}}'
  templatePatch: |
    spec:
      syncPolicy:
        automated:
      {{- if hasKey . "automatedPrune" }}
          prune: {{.automatedPrune}}
      {{- else }}
          prune: true
      {{- end }}
      {{- if hasKey . "automatedSelfHeal" }}
          selfHeal: {{.automatedSelfHeal}}
      {{- else }}
          selfHeal: true
      {{- end }}
      {{- if hasKey . "automatedAllowEmpty" }}
          allowEmpty: {{.automatedAllowEmpty}}
      {{- else }}
          allowEmpty: true
      {{- end }}
        syncOptions:
      {{- if hasKey . "syncPolicyValidate" }}
          - Validate={{.syncPolicyValidate}}
      {{- else }}
          - Validate=true
      {{- end }}
      {{- if hasKey . "syncPolicyCreateNamespace" }}
          - CreateNamespace={{.syncPolicyCreateNamespace}}
      {{- else }}
          - CreateNamespace=true
      {{- end }}
      {{- if hasKey . "syncPolicyPrunePropagationPolicy" }}
          - PrunePropagationPolicy={{.syncPolicyPrunePropagationPolicy}}
      {{- else }}
          - PrunePropagationPolicy=foreground
      {{- end }}
      {{- if hasKey . "syncPolicyPruneLast" }}
          - PruneLast={{.syncPolicyPruneLast}}
      {{- else }}
          - PruneLast=true
      {{- end }}
      {{- if hasKey . "syncPolicyRespectIgnoreDifferences" }}
          - RespectIgnoreDifferences={{.syncPolicyRespectIgnoreDifferences}}
      {{- else }}
          - RespectIgnoreDifferences=true
      {{- end }}      
      {{- if hasKey . "syncPolicyApplyOutOfSyncOnly" }}
          - Validate={{.syncPolicyApplyOutOfSyncOnly}}
      {{- else }}
          - ApplyOutOfSyncOnly=true
      {{- end }}
