---
apiVersion: iam.aws.upbound.io/v1beta1
kind: Role
metadata:
  name: cp-example-role-with-policy
  # annotations:
  #   crossplane.io/external-name: sg-0e880dcde534bafc1 # manage existing SecurityGroup
  labels:
    name: cp-example-role-with-policy
    ManagedBy: crossplane
spec:
  providerConfigRef:
    name: aws-upbound-pc
  # deletionPolicy: Orphan # Do not delete resource even you will delete it from crossplane
  forProvider:
    description: "Role for SSM agent"
    assumeRolePolicy: |
      {
        "Version": "2012-10-17",
        "Statement": [
          {
            "Effect": "Allow",
            "Principal": {
              "Service": "ec2.amazonaws.com"
            },
            "Action": "sts:AssumeRole"
          }
        ]
      }
    tags:
      Name: cp-example-role-with-policy
      ManagedBy: crossplane
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: RolePolicyAttachment
metadata:
  name: cp-example-role-policy-attach
  # annotations:
  #   crossplane.io/external-name: sg-0e880dcde534bafc1 # manage existing SecurityGroup
  labels:
    name: cp-example-role-policy-attach
    ManagedBy: crossplane
spec:
  providerConfigRef:
    name: aws-upbound-pc
  # deletionPolicy: Orphan # Do not delete resource even you will delete it from crossplane
  forProvider:
    roleSelector:
      matchLabels:
        name: cp-example-role-with-policy
---
apiVersion: iam.aws.upbound.io/v1beta1
kind: InstanceProfile
metadata:
  name: cp-example-instance-profile
  # annotations:
  #   crossplane.io/external-name: sg-0e880dcde534bafc1 # manage existing SecurityGroup
  labels:
    name: cp-example-instance-profile
    ManagedBy: crossplane
spec:
  providerConfigRef:
    name: aws-upbound-pc
  # deletionPolicy: Orphan # Do not delete resource even you will delete it from crossplane
  forProvider:
    roleSelector:
      matchLabels:
        name: cp-example-role-with-policy
    tags:
      Name: cp-example-instance-profile
      ManagedBy: crossplane