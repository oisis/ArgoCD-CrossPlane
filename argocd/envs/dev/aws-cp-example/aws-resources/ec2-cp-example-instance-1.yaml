---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: SecurityGroup
metadata:
  name: cp-example-instance-1-sg
spec:
  providerConfigRef:
    name: aws-upbound-pc
  forProvider:
    description: Security group for EC2 instance
    groupName: cp-example-instance-1-sg
    region: us-east-1
    vpcIdRef: 
      name: cp-example-vpc
    tags:
      Name: cp-example-instance-1-sg
    ingress:
      - ipProtocol: tcp
        fromPort: 22
        toPort: 22
        cidrBlocks:
          - 0.0.0.0/0
      - ipProtocol: tcp
        fromPort: 80
        toPort: 80
        cidrBlocks:
          - 0.0.0.0/0
    egress:
      - ipProtocol: -1
        fromPort: 0
        toPort: 0
        cidrBlocks:
          - 0.0.0.0/0
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Volume
metadata:
  name: cp-example-instance-1-ebs
spec:
  providerConfigRef:
    name: aws-upbound-pc
  forProvider:
    availabilityZone: us-east-1a
    size: 20
    volumeType: gp2
    tags:
      - key: Name
        value: cp-example-instance-1-ebs
---
apiVersion: ec2.aws.upbound.io/v1beta1
kind: Instance
metadata:
  name: cp-example-instance-1
  labels:
    testing.upbound.io/example-name: cp-example-instance-1
spec:
  providerConfigRef:
    name: aws-upbound-pc
  forProvider:
    region: us-east-1
    ami: ami-05576a079321f21f8
    instanceType: t2.medium
    associatePublicIpAddress: true
    availabilityZone: us-east-1a
    disableApiStop: false
    monitoring: true
    securityGroupIdRefs:
      - name: cp-example-instance-1-sg
    subnetIdSelector:
      matchControllerRef: true
    blockDeviceMappings:
      - deviceName: /dev/xvdb
        ebs:
          volumeIdRef:
            name: cp-example-instance-1-ebs
    tags:
      Name: cp-example-instance-1
    volumeTags:
      Name: cp-example-instance-1
    userData: |
      #!/bin/bash
      mkdir -p /mount/ebs1
      mkfs.ext4 /dev/xvdb
      mount /dev/xvdb /mount/ebs1
      echo '/dev/xvdb /mount/ebs1 ext4 defaults 0 0' >> /etc/fstab