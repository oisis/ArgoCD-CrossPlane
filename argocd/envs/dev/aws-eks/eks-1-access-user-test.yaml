---
apiVersion: eks.aws.upbound.io/v1beta1
kind: AccessEntry
metadata:
  name: eks-1-access-entry-user-test
  # annotations:
  #   crossplane.io/external-name: sg-0e880dcde534bafc1 # manage existing SecurityGroup
  labels:
    name: eks-1-access-entry
    ManagedBy: crossplane
spec:
  providerConfigRef:
    name: aws-upbound-pc
  # deletionPolicy: Orphan # Do not delete resource even you will delete it from crossplane
  forProvider:
    clusterNameRef:
      name: eks-1
    # principalArn: arn:aws:iam::381492007305:user/cloud_user
    userName: cloud_user
    region: us-east-1
    type: STANDARD
    tags:
      Name: eks-1-access-entry
      ManagedBy: crossplane
---
apiVersion: eks.aws.upbound.io/v1beta1
kind: AccessPolicyAssociation
metadata:
  name: eks-1-apa
  # annotations:
  #   crossplane.io/external-name: sg-0e880dcde534bafc1 # manage existing SecurityGroup
  labels:
    name: eks-1-apa
    ManagedBy: crossplane
spec:
  providerConfigRef:
    name: aws-upbound-pc
  # deletionPolicy: Orphan # Do not delete resource even you will delete it from crossplane
  forProvider:
    region: us-east-1
    accessScope:
      type: cluster
    clusterNameRef:
      name: eks-1
    policyArn: arn:aws:eks::aws:cluster-access-policy/AmazonEKSClusterAdminPolicy
    principalArnRef:
      name: eks-1-access-entry-user-test
